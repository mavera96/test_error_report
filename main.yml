---
- name: inventory creation in memory
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    managed_hosts: "{{ managed_hosts_survey | split('\n') | map('trim') | difference(['']) }}"
  tasks:
    - ansible.builtin.debug:
        var: managed_hosts

    - name: Run validations on Survey data
      ansible.builtin.include_role:
        role: liverpool.automation.hosts_validation
      vars:
        hosts_provided: "{{ managed_hosts }}"
        errors_report: false

    - name: Load managed hosts group
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: mgmt_hosts
      loop: "{{ mgmt_hosts }}"

- name: Collecting facts
  hosts: all
  gather_facts: no
  tasks:
    - name: connection test
      ansible.builtin.include_role:
        name: liverpool.automation.connection_validation
      vars:
        subsets:
          - '!all'
          - 'all_ipv4_addresses'
    # - name: gather required facts
    #   ansible.builtin.setup:
    #   register: connection
    #   ignore_unreachable: true
    #   ignore_errors: true
    
    # - block:
    #     - name: Register permissions denied hosts
    #       ansible.builtin.include_role:
    #         name: liverpool.automation.errors_report
    #       vars:
    #         error_message: "No conexion: Error en autenticacion ssh"
    #       when: '"Permission denied" in connection.msg'

    #     - name: Register timeout connection
    #       ansible.builtin.include_role:
    #         name: liverpool.automation.errors_report
    #       vars:
    #         error_message: "No conexion: Conexion ssh con timeout"
    #       when: '"Connection timed out" in connection.msg'

    #     - name: Register possible python errors
    #       ansible.builtin.include_role:
    #         name: liverpool.automation.errors_report
    #       vars:
    #         error_message: "No conexion: Posible error con modulos de Python"
    #       when: 'connection.rc is defined'

    #     - name: Discard unreachable hosts
    #       ansible.builtin.fail:
    #         msg: "{{ connection.msg }}"
    #   when:
    #     connection.unreachable is defined or
    #     connection.rc is defined


- name: test errors report
  hosts: all
  tasks:
    - name: error tasks
      ansible.builtin.shell: |
        eco "Fail echo"
      register: error
      ignore_errors: true

    - debug:
        msg: '{{ ansible_play_batch }}'
    - block:
        - name: register error
          ansible.builtin.include_role:
            name: liverpool.automation.errors_report
          vars:
            error_message: esto es un error

        - name: break playbook on this host
          ansible.builtin.fail:
            msg: esto es un error
      when: error.rc is defined

- name: upload report
  hosts: localhost
  connection: local
  tasks:
    - name: register error
      ansible.builtin.include_role:
        name: liverpool.automation.errors_report
      vars:
        upload_log: true
